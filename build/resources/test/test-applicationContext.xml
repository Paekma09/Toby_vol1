<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost/toby"/>
        <property name="username" value="root"/>
        <property name="password" value="1234"/>
    </bean>

<!--    <bean id="userService" class="user.service.UserServiceImpl">-->
<!--        <property name="userDao" ref="userDao"/>-->
<!--        <property name="transactionManager" ref="transactionManager"/>-->
<!--        <property name="mailSender" ref="mailSender"/>-->
<!--    </bean>-->

<!--    데코레이터 패턴을 위한 DI 설정 -->
<!--    <bean id="userService" class="user.service.UserServiceTx">-->
<!--        <property name="transactionManager" ref="transactionManager"/>-->
<!--        <property name="userService" ref="userServiceImpl"/>-->
<!--    </bean>-->

<!--    UserService 에 대한 트랜잭션 프록시 팩토리 빈 -->
<!--    <bean id="userService" class="user.service.TxProxyFactoryBean">-->
<!--        <property name="target" ref="userServiceImpl"/>-->
<!--        <property name="transactionManager" ref="transactionManager"/>-->
<!--        <property name="pattern" value="upgradeLevels"/>-->
<!--        <property name="serviceInterface" value="user.service.UserService"/>-->
<!--    </bean>-->

<!--    ProxyFactoryBean 설정 -->
    <bean id="userService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="userServiceImpl"/>
<!--    어드바이스와 어드바이저를 동시에 설정해줄 수 있는 프로퍼티. 리스트에 어드바이스나 어드바이저의 빈 아이디를 값으로 넣어주면 된다. 기존의 ref 애트리뷰트를 사용하는 DI 와는 방식이 다름에 주의해야 한다.-->
        <property name="interceptorNames">
            <list>
<!--            한 개 이상의 <value> 태그를 넣을 수 있다.-->
                <value>transactionAdvisor</value>
            </list>
        </property>
    </bean>

    <bean id="userServiceImpl" class="user.service.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
        <property name="mailSender" ref="mailSender"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

<!--    트랜잭션 어드바이스 빈 설정 -->
    <bean id="transactionAdvice" class="user.service.TransactionAdvice">
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

<!--    포인트컷 빈 설정 -->
    <bean id="transactionPointcut" class="org.springframework.aop.support.NameMatchMethodPointcut">
        <property name="mappedName" value="upgrade*"/>
    </bean>

<!--    어드바이저 빈 설정 -->
    <bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
        <property name="advice" ref="transactionAdvice"/>
        <property name="pointcut" ref="transactionPointcut"/>
    </bean>

    <bean id="userDao" class="user.dao.UserDaoJdbc">
        <property name="dataSource" ref="dataSource"/>
    </bean>

<!--    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">-->
<!--        <property name="host" value="mail.server.com"/>-->
<!--    </bean>-->

    <bean id="mailSender" class="user.service.DummyMailSender">
        <property name="host" value="mail.server.com"/>
    </bean>

</beans>